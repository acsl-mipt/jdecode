
ru"Модуль управления выдачей ТМ-информации"
namespace ru.mipt.acsl.tm

import decode.(array, varuint, u8)

language ru

'Циклический массив'
struct ring_buf
(
  'Данные циклического массива'
  data: array[u8],
  'Смещение начала цкилического массива'
  startOffset: varuint,
  'Смещение конца циклического массива'
  endOffset: varuint,
)

'Номер компонента и номер сообщения'
struct comp_msg
(
  'Номер компонента'
  componentNum: varuint,
  'Номер сообщения в компоненте'
  messageNum: varuint,
)

'Информация о событии'
struct event_info
(
  componentMessage: comp_msg,
  'Номер события'
  eventNum: varuint,
)

enum tm_cmd_error varuint (OK = 0, INVALID_ARGUMENT = 1, INVALID_STATE = 2, INVALID_MESSAGE_NUM = 3)

'Управление формированием и выдачей ТМ-информации'
component Tm
{
  parameters
  (
    'число разрешенных для выдачи сообщений'
    allowedMessages: varuint,
  )

  'Выдать статусное сообщение во внеочередную выдачу'
  command sendStatusMessage(componentMessage: comp_msg): tm_cmd_error

  'Установить запрос на выдачу в соответствии с приоритетом'
  command setMessageRequest(componentMessage: comp_msg, 'Приоритет' ^priority: varuint): tm_cmd_error

  'Снять запрос на выдачу в соответствии с приоритетом'
  command clearMessageRequest(componentMessage: comp_msg): tm_cmd_error

  'Запретить формирование ТМ-сообщения'
  command denyMessage(componentMessage: comp_msg): tm_cmd_error

  'Снять запрет на формирование ТМ-сообщения'
  command allowMessage(componentMessage: comp_msg): tm_cmd_error

  'Установить запрет на формирование и выдачу события'
  command denyEvent(eventInfo: event_info): tm_cmd_error

  'Снять запрет на формирование и выдачу события'
  command allowEvent(eventInfo: event_info): tm_cmd_error
}